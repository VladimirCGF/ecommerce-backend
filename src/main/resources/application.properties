quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = 123
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/ecommerce-db

quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql = true

quarkus.scheduler.enabled=true

quarkus.http.static-resources./assets=/assets

# Habilitar CORS no Quarkus
quarkus.http.cors=true

# Especificar a origem permitida (no seu caso, localhost:4200, que é onde seu Angular roda)
quarkus.http.cors.origins=http://localhost:4200

# Métodos HTTP permitidos (especifique os métodos que seu frontend usa, como POST, GET, etc.)
quarkus.http.cors.methods=GET,POST,PUT,DELETE

# Definir os cabeçalhos permitidos nas requisições
quarkus.http.cors.headers=Accept,Authorization,Content-Type

# Permitir credenciais se necessário
quarkus.http.cors.access-control-allow-credentials=true

#mp.jwt.verify.publickey.location = token/publicKey.pem
#mp.jwt.verify.issuer=ecommerce-jwt
#smallrye.jwt.sign.key.location=token/privateKey.pem

## RODAR NO TERMINAL PARA GERAR AS CHAVES
## openssl genrsa -out rsaPrivateKey.pem 2048
## openssl rsa -pubout -in rsaPrivateKey.pem -out publicKey.pem
## openssl pkcs8 -topk8 -nocrypt -inform pem -in rsaPrivateKey.pem -outform pem -out privateKey.pem